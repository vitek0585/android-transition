<resources>
    <string name="app_name">TransitionActivity</string>
    <string name="text_1">Пользовательские Переходы  У нас также есть возможность создавать свои собственные переходы, используя любую анимацию из API, которую мы рассмотрели до сих пор. Например, мы можем взять Shared Element переходы на один шаг дальше, чтобы превратиться в переходный образ – это может пригодиться, когда мы хотим отобразить диалоги (или аналогичные всплывающие образы), как показано ниже:    Это движение помогает направлять внимание пользователя между составными состояниями  Давайте коротко остановимся на том, что происходит здесь:  Мы начинаем с создания SharedTransition, проходя в нажатом состоянии вместе с именем перехода, чтобы ссылаться на общий компонент Далее мы создаем экземпляр ArcMotion, это позволяет нам создать изогнутый эффект движения при переходе между двумя образами Затем мы расширяем ChangeBounds, чтобы создать пользовательский переход и трансформировать две формы (у нас есть отдельный класс для кнопки и FAB). Здесь мы переопределяем различные методы из класса, так что мы можем оживить требуемые свойства. Мы воспользуемся ViewPropertyAnimator, чтобы оживить прозрачность диалоговых образов, ObjectAnimator, чтобы оживить образы между двумя видами цвета и образец AnimatorSet, чтобы мы смогли анимировать оба этих эффекта вместе.</string>
</resources>
